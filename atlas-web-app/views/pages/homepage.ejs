<!--
This is the Atlas default homepage.
For more Sails information, see:
• https://sailsjs.com/documentation/concepts/views
• https://sailsjs.com/documentation/concepts/routes
-->
<a>ATLAS Home</a> <a>&gt;</a>

<h1 class="title">
    ARENA Portal
</h1>

<img src="/images/conix-face-lofi.gif">
<div class="section">
    <h2>
        Enter ARENA information:
    </h2>

    <div class="columns">
        <div class="column is-half">

            <form method="get">
                <div class="field">
                    <label class="label">
                        Avatar Name:
                    </label>
                    <div class="control">
                        <input class="input" type="text" name="name">
                    </div>
                </div>
                <div class="field">
                    <label class="label">
                        ARENA MQTT Server:
                    </label>
                    <div class="control">
                        <input class="input" type="text" name="mqttServer" value="oz.andrew.cmu.edu">
                    </div>
                </div>
                <div class="field">
                    <label class="label">
                        Server Scene:
                    </label>
                    <div class="control">
                        <input class="input" type="text" name="scene" value="render">
                    </div>
                </div>
                <div class="field">
                    <label class="label">
                        Environment Theme:
                    </label>
                    <div class="control">
                        <div class="select">
                            <select name="theme">
                                <option value="starry">starry</option>
                                <option value="none">none</option>
                                <option value="osiris">osiris</option>
                                <option value="default">default</option>
                                <option value="contact">contact</option>
                                <option value="egypt">egypt</option>
                                <option value="checkerboard">checkerboard</option>
                                <option value="forest">forest</option>
                                <option value="goaland">goaland</option>
                                <option value="yavapai">yavapai</option>
                                <option value="goldmine">goldmine</option>
                                <option value="threetowers">threetowers</option>
                                <option value="poison">poison</option>
                                <option value="arches">arches</option>
                                <option value="tron">tron</option>
                                <option value="japan">japan</option>
                                <option value="dream">dream</option>
                                <option value="volcano">volcano</option>
                            </select>
                        </div>
                    </div>
                </div>
                <button class="button" type="submit" formaction="https://xr.andrew.cmu.edu/">Enter VR</button>
                <br/>
                -OR-
                <br/>
                <button class="button" type="submit" formaction="https://xr.andrew.cmu.edu/arena-xr/">Enter AR
                </button>
            </form>
        </div>
    </div>
</div>

<div class="section">
    <h2 class="title">
        Sample VR Panoramas:
    </h2>

    <a href="https://xr.andrew.cmu.edu/?name=&theme=egypt&scene=nara&weather=none&mqttServer=oz.andrew.cmu.edu">
        Nara
    </a>
    <br/>
    <a href="https://xr.andrew.cmu.edu/arena-xr/?name=&theme=none&scene=waterfall&weather=none&mqttServer=oz.andrew.cmu.edu">
        Waterfall
    </a>
    <br/>
    <a href="https://xr.andrew.cmu.edu/arena-xr/?name=&theme=starry&scene=city&weather=none&mqttServer=oz.andrew.cmu.edu">
        City
    </a>
    <br/>
    <a href="https://xr.andrew.cmu.edu/arena-xr/?name=&theme=none&scene=beach&weather=none&mqttServer=oz.andrew.cmu.edu">
        Beach
    </a>
    <br/>
    <a href="https://xr.andrew.cmu.edu/arena-xr/?name=&theme=none&scene=kungfu&weather=none&mqttServer=oz.andrew.cmu.edu">
        KungFu
    </a>
</div>

<!-- ATLAS part -->
<!-- ====================================================================== -->
<div class="section">
    <h1 class="title">
        ATLAS Home
    </h1>

    <h2 class="title">
        What is ATLAS?
    </h2>

    <p>
        ATLAS (Authority on the Locations of ARENA Stuff) is a geographic entity
        service that connects ARENA users to nearby content. The service can be
        thought of like a geographic DNS that maps locations (GPS coordinates, IDs of
        beacons and markers) with ARENA servers (realms) and scenes.
    </p>

    <h2 class="title">
        <em>Manage</em> the ARENA ATLAS:
    </h2>

    <ul>
        <li><a href="/create-record-form">Create Record (Form)</a></li>
        <li><a href="/record">Show All Records (JSON)</a></li>
        <li><a href="/search-records-form">Advanced Search Records (Waterline QL)</a></li>
        <li><a>Update Record</a></li>
        <li><a href="/destroy-record-form">Destroy Record</a></li>
    </ul>

    <button class="button is-info" onclick="locationSearch()">Search by current location</button>

    <h2 class="title">
        About Development
    </h2>

    <p>
        ATLAS is under active development as of October 2019. The repository is
        available under the `conix-center` organization on GitHub, see:
    </p>

    <a href="https://github.com/conix-center/">https://github.com/conix-center/</a>

    <!-- ltj: TODO: delete for prod -->
    <!-- ltj: TODO: investigate if there are auto ways to take stuff out of prod env -->
    <br>
    <h2 style="background-color:orange; color:black">
        DEVENV ONLY
    </h2>
    <a href="https://www.disney.com">(Probably) Unclicked Link</a>
</div>
<div class="modal" id="geo_results">
    <div class="modal-background"></div>
    <div class="modal-content">
        <div class="card">
            <header class="card-header">
                <p class="card-header-title">ATLAS Results</p>
            </header>
            <div class="card-content" id="modal-content">
                <table class="table is-hoverable is-fullwidth">
                    <thead>
                    <th>
                        ID
                    </th>
                    <th>
                        Distance
                    </th>
                    </thead>
                    <tbody id="modal-table">

                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <button class="modal-close is-large" aria-label="close"></button>
</div>
<script>
     // Modals
    var openModal;
    document.addEventListener('DOMContentLoaded', function () {
        var rootEl = document.documentElement;
        var $modals = getAll('.modal');
        var $modalButtons = getAll('.modal-button');
        var $modalCloses = getAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button');

        if ($modalButtons.length > 0) {
            $modalButtons.forEach(function ($el) {
                $el.addEventListener('click', function () {
                    var target = $el.dataset.target;
                    openModal(target);
                });
            });
        }

        if ($modalCloses.length > 0) {
            $modalCloses.forEach(function ($el) {
                $el.addEventListener('click', function () {
                    closeModals();
                });
            });
        }

        openModal = (target) => {
            var $target = document.getElementById(target);
            rootEl.classList.add('is-clipped');
            $target.classList.add('is-active');
        }

        function closeModals() {
            rootEl.classList.remove('is-clipped');
            $modals.forEach(function ($el) {
                $el.classList.remove('is-active');
            });
        }

        document.addEventListener('keydown', function (event) {
            var e = event || window.event;
            if (e.keyCode === 27) {
                closeModals();
            }
        });

        function getAll(selector) {
            return Array.prototype.slice.call(document.querySelectorAll(selector), 0);
        }
    });
     function locationSearch() {
         if (navigator.geolocation) {
             navigator.geolocation.getCurrentPosition(async (position) => {
                 let coords = position.coords;
                 let url = `/lookup/geo?lat=${coords.latitude}&long=${coords.longitude}&distance=200&units=m`;
                 let modalContent = document.getElementById('modal-content');
                 let modalTable = document.getElementById('modal-table')
                 try {
                     const response = await fetch(url);
                     const jsonResponse = await response.json();
                     modalTable.innerHTML = '';
                     for (let i = 0, responses = jsonResponse.length; i < responses; i++) {
                        let row = `<tr><td><a href="${jsonResponse[i].url}">${jsonResponse[i].id}</a></td><td>${jsonResponse[i].distance}</td></tr>`;
                        modalTable.insertAdjacentHTML('beforeend', row);
                     }
                     openModal('geo_results');
                 } catch (err) {
                     modalContent.innerHTML = "<p>Geo lookup error</p>";
                     openModal('geo_results');
                 }
             });
         } else {
             alert("Geolocation is not supported by this browser.");
         }
     }
</script>
